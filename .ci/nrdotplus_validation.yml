name: NRDOT+ TF-K8s Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *' # nightly run

env:
  SECURITY_GATES: ${{ github.event_name == 'schedule' }}

jobs:
  check-spec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Lint markdown
        run: |
          npm install -g markdownlint-cli
          markdownlint "eidc/**/*.md" "tf-k8s/**/*.md"
      
      - name: Validate schemas
        run: |
          pip install jsonschema pyyaml
          python .ci/validate_schemas.py

      - name: Check schema-docs sync
        run: |
          python .ci/check_docs_drift.py
          
  tf-k8s-functional:
    needs: check-spec
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scenario-group: [slo-core, slo-perf, slo-alert, mfr-basic, mfr-advanced, mfr-components, regression]
        cluster: [kind]
        include:
          - scenario-group: slo-core
            cluster: k3d-duo
          - scenario-group: mfr-advanced
            cluster: k3d-duo
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Kubernetes cluster
        run: |
          bash tf-k8s/scripts/cluster-ctrl.sh setup ${{ matrix.cluster }}
      
      - name: Execute scenario group
        run: |
          python tf-k8s/scripts/scenario-runner.py --group ${{ matrix.scenario-group }} --cluster ${{ matrix.cluster }}
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.scenario-group }}-${{ matrix.cluster }}
          path: tf-k8s/reports/
  
  security-gates:
    needs: check-spec
    if: ${{ env.SECURITY_GATES == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Kubernetes cluster
        run: |
          bash tf-k8s/scripts/cluster-ctrl.sh setup kind
      
      - name: Execute security scenarios
        run: |
          python tf-k8s/scripts/scenario-runner.py --group security --cluster kind
      
      - name: Upload security results
        uses: actions/upload-artifact@v3
        with:
          name: security-results
          path: tf-k8s/reports/
  
  coverage-drift:
    needs: check-spec
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Generate docs from schemas
        run: |
          python .ci/generate_docs.py
      
      - name: Check for drift
        id: drift
        run: |
          if git diff --name-only | grep -q '.md$'; then
            echo "drift=true" >> $GITHUB_OUTPUT
            git diff > drift.patch
          else
            echo "drift=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create drift issue
        if: steps.drift.outputs.drift == 'true'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: Documentation Drift Detected
          content-filepath: drift.patch
          labels: drift, documentation, automated