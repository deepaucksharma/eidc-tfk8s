name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  matrix-check:
    name: Test Matrix Verification
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Verify test matrix
        run: python tools/test-matrix-builder/test_matrix_builder.py verify
      
      - name: Update PRD from appendices
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: python tools/test-matrix-builder/test_matrix_builder.py
      
      - name: Commit updated PRD
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/prd/PRD-NRDOT-INT-LAB-v2.1.2-v1.6.md
          git commit -m "Update PRD from appendices [skip ci]" || echo "No changes to commit"
          git push

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Verify dependencies
        run: go mod verify
      
      - name: Run go vet
        run: go vet ./...
      
      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest
      
      - name: Run staticcheck
        run: staticcheck ./...
      
      - name: Run gofmt
        run: test -z "$(gofmt -s -l .)"

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Run unit tests
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...
      
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and export FB-RX
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./pkg/fb/rx/Dockerfile
          load: true
          tags: nrdot-internal-devlab/fb-rx:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and export ConfigController
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./cmd/configcontroller/Dockerfile
          load: true
          tags: nrdot-internal-devlab/config-controller:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  system-e2e-core:
    name: System E2E Core Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set up k3d
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: v5.5.1
          k3d-args: --no-lb --no-rollback
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
      
      - name: Install CRDs
        run: kubectl apply -f deploy/k8s/crds/
      
      - name: Deploy with Helm
        run: |
          helm install nrdot-devlab ./deploy/helm --values ./deploy/helm/values-lab.yaml
          kubectl rollout status deployment/nrdot-devlab-fb-rx
      
      - name: Run Core E2E Tests
        run: go test -v ./pkg/test/e2e/...

  system-e2e-advanced:
    name: System E2E Advanced Tests
    runs-on: ubuntu-latest
    needs: [system-e2e-core]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set up k3d
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: v5.5.1
          k3d-args: --no-lb --no-rollback
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
      
      - name: Install CRDs
        run: kubectl apply -f deploy/k8s/crds/
      
      - name: Deploy with Helm
        run: |
          helm install nrdot-devlab ./deploy/helm --values ./deploy/helm/values-lab.yaml
          kubectl rollout status deployment/nrdot-devlab-fb-rx
      
      - name: Run Advanced E2E Tests
        run: go test -v ./pkg/test/slo/...

  resilience-chaos:
    name: Resilience and Chaos Tests
    runs-on: ubuntu-latest
    needs: [system-e2e-core]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set up k3d
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: v5.5.1
          k3d-args: --no-lb --no-rollback
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
      
      - name: Install CRDs
        run: kubectl apply -f deploy/k8s/crds/
      
      - name: Deploy with Helm
        run: |
          helm install nrdot-devlab ./deploy/helm --values ./deploy/helm/values-lab.yaml
          kubectl rollout status deployment/nrdot-devlab-fb-rx
      
      - name: Install Chaos Mesh
        run: |
          helm repo add chaos-mesh https://charts.chaos-mesh.org
          helm install chaos-mesh chaos-mesh/chaos-mesh --namespace=chaos-testing --create-namespace
      
      - name: Run Chaos Tests
        run: go test -v ./pkg/test/chaos/...

  dr-drill-light:
    name: DR Drill Light Tests
    runs-on: ubuntu-latest
    needs: [system-e2e-advanced, resilience-chaos]
    if: github.event_name == 'schedule' # Only runs on schedule, not on push or PR
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set up k3d
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: v5.5.1
          k3d-args: --no-lb --no-rollback
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'
      
      - name: Install CRDs
        run: kubectl apply -f deploy/k8s/crds/
      
      - name: Deploy with Helm
        run: |
          helm install nrdot-devlab ./deploy/helm --values ./deploy/helm/values-lab.yaml
          kubectl rollout status deployment/nrdot-devlab-fb-rx
      
      - name: Create Volume Snapshots
        run: ./deploy/scripts/backup-restore/backup-pvc.sh
      
      - name: Delete and Restore from Snapshots
        run: ./deploy/scripts/backup-restore/restore-pvc.sh
      
      - name: Verify System Operation Post-Restore
        run: go test -v ./pkg/test/resilience/...
